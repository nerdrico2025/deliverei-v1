import { PrismaService } from '../../database/prisma.service';
import { CreateProdutoDto, UpdateProdutoDto } from './dto';
export declare class ProdutosService {
    private readonly prisma;
    private readonly logger;
    private readonly useMockData;
    private mockProdutos;
    constructor(prisma: PrismaService);
    create(createProdutoDto: CreateProdutoDto, empresaId: string): Promise<{
        id: string;
        nome: string;
        descricao: string | null;
        preco: number;
        imagem: string | null;
        ativo: boolean;
        empresaId: string;
        estoque: number;
        categoria: string | null;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: Date;
        updatedAt: Date;
    } | {
        id: string;
        nome: string;
        descricao: string;
        preco: number;
        imagem: string;
        ativo: boolean;
        estoque: number;
        categoria: string;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        empresaId: string;
        createdAt: string;
        updatedAt: string;
    }>;
    findAll(empresaId: string, page?: number, limit?: number, categoria?: string, search?: string, ativo?: boolean): Promise<import("../../utils").PaginatedResponse<{
        empresaId: string;
        id: string;
        nome: string;
        descricao: string;
        preco: number;
        imagem: string;
        ativo: boolean;
        estoque: number;
        categoria: string;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: string;
        updatedAt: string;
    }> | import("../../utils").PaginatedResponse<{
        id: string;
        nome: string;
        descricao: string | null;
        preco: number;
        imagem: string | null;
        ativo: boolean;
        empresaId: string;
        estoque: number;
        categoria: string | null;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>>;
    findOne(id: string, empresaId: string): Promise<{
        id: string;
        nome: string;
        descricao: string | null;
        preco: number;
        imagem: string | null;
        ativo: boolean;
        empresaId: string;
        estoque: number;
        categoria: string | null;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: Date;
        updatedAt: Date;
    } | {
        empresaId: string;
        id: string;
        nome: string;
        descricao: string;
        preco: number;
        imagem: string;
        ativo: boolean;
        estoque: number;
        categoria: string;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: string;
        updatedAt: string;
    }>;
    update(id: string, updateProdutoDto: UpdateProdutoDto, empresaId: string): Promise<{
        id: string;
        nome: string;
        descricao: string | null;
        preco: number;
        imagem: string | null;
        ativo: boolean;
        empresaId: string;
        estoque: number;
        categoria: string | null;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: Date;
        updatedAt: Date;
    } | {
        id: string;
        nome: string;
        descricao: string;
        preco: number;
        imagem: string;
        ativo: boolean;
        estoque: number;
        categoria: string;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        empresaId: string;
        createdAt: string;
        updatedAt: string;
    }>;
    remove(id: string, empresaId: string): Promise<{
        id: string;
        nome: string;
        descricao: string | null;
        preco: number;
        imagem: string | null;
        ativo: boolean;
        empresaId: string;
        estoque: number;
        categoria: string | null;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: Date;
        updatedAt: Date;
    } | {
        id: string;
        nome: string;
        descricao: string;
        preco: number;
        imagem: string;
        ativo: boolean;
        estoque: number;
        categoria: string;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        empresaId: string;
        createdAt: string;
        updatedAt: string;
    }>;
    hardRemove(id: string, empresaId: string): Promise<{
        id: string;
        nome: string;
        descricao: string | null;
        preco: number;
        imagem: string | null;
        ativo: boolean;
        empresaId: string;
        estoque: number;
        categoria: string | null;
        promo_tag: boolean;
        bestseller_tag: boolean;
        new_tag: boolean;
        createdAt: Date;
        updatedAt: Date;
    } | {
        success: boolean;
    }>;
}
